"""add spot client tables, fix record table

Revision ID: 350506f6a321
Revises: 5f78a6790985
Create Date: 2023-11-11 13:47:52.952056

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '350506f6a321'
down_revision: Union[str, None] = '5f78a6790985'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('gender', sa.Boolean(), nullable=False),
    sa.Column('address', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=64), nullable=False),
    sa.Column('image_path', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_address'), 'clients', ['address'], unique=False)
    op.create_index(op.f('ix_clients_first_name'), 'clients', ['first_name'], unique=False)
    op.create_index(op.f('ix_clients_last_name'), 'clients', ['last_name'], unique=False)
    op.create_index(op.f('ix_clients_phone'), 'clients', ['phone'], unique=False)
    op.create_table('spots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('master_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_id'], ['masters.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('records', sa.Column('client_id', sa.Integer(), nullable=False))
    op.add_column('records', sa.Column('spot_id', sa.Integer(), nullable=False))
    op.drop_constraint('records_service_id_fkey', 'records', type_='foreignkey')
    op.drop_constraint('records_master_id_fkey', 'records', type_='foreignkey')
    op.create_foreign_key(None, 'records', 'spots', ['spot_id'], ['id'])
    op.create_foreign_key(None, 'records', 'clients', ['client_id'], ['id'])
    op.drop_column('records', 'timestamp')
    op.drop_column('records', 'service_id')
    op.drop_column('records', 'master_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('records', sa.Column('master_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('records', sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('records', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'records', type_='foreignkey')
    op.drop_constraint(None, 'records', type_='foreignkey')
    op.create_foreign_key('records_master_id_fkey', 'records', 'masters', ['master_id'], ['id'])
    op.create_foreign_key('records_service_id_fkey', 'records', 'services', ['service_id'], ['id'])
    op.drop_column('records', 'spot_id')
    op.drop_column('records', 'client_id')
    op.drop_table('spots')
    op.drop_index(op.f('ix_clients_phone'), table_name='clients')
    op.drop_index(op.f('ix_clients_last_name'), table_name='clients')
    op.drop_index(op.f('ix_clients_first_name'), table_name='clients')
    op.drop_index(op.f('ix_clients_address'), table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###
